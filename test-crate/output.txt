body string fn main() -> () {
    let mut _0: ();
    let mut _5: std::option::Option<&'?8 i32>;
    let mut _6: &'?9 [i32];
    let _7: &'?10 [i32];
    let mut _8: &'?11 std::vec::Vec<i32>;
    scope 1 {
        scope 2 {
            debug x => _1;
            scope 5 {
                debug y => _2;
                scope 9 {
                    debug v => _3;
                    scope 13 {
                        debug c => _4;
                    }
                    scope 14 {
                        let _4: &'?7 i32;
                        scope 15 {
                            scope 16 {
                                scope 17 {
                                }
                                scope 18 {
                                }
                            }
                        }
                    }
                }
                scope 10 {
                    let _3: std::vec::Vec<i32> as UserTypeProjection { base: UserType(0), projs: [] };
                    scope 11 {
                        scope 12 {
                        }
                    }
                }
            }
            scope 6 {
                let _2: &'?6 i32;
                scope 7 {
                    scope 8 {
                    }
                }
            }
        }
        scope 3 {
            let _1: i32;
            scope 4 {
            }
        }
    }

    bb0: {
        StorageLive(_1);
        _1 = const 7_i32;
        FakeRead(ForLet(None), _1);
        StorageLive(_2);
        _2 = &'?2 _1;
        FakeRead(ForLet(None), _2);
        StorageLive(_3);
        _3 = std::vec::Vec::<i32>::new() -> [return: bb1, unwind: bb7];
    }

    bb1: {
        FakeRead(ForLet(None), _3);
        AscribeUserType(_3, o, UserTypeProjection { base: UserType(2), projs: [] });
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        _8 = &'?3 _3;
        _7 = <std::vec::Vec<i32> as std::ops::Deref>::deref(move _8) -> [return: bb2, unwind: bb6];
    }

    bb2: {
        _6 = &'?4 (*_7);
        StorageDead(_8);
        _5 = core::slice::<impl [i32]>::get::<usize>(move _6, const 0_usize) -> [return: bb3, unwind: bb6];
    }

    bb3: {
        StorageDead(_6);
        _4 = std::option::Option::<&'?5 i32>::unwrap(move _5) -> [return: bb4, unwind: bb6];
    }

    bb4: {
        StorageDead(_5);
        FakeRead(ForLet(None), _4);
        StorageDead(_7);
        _0 = const ();
        StorageDead(_4);
        drop(_3) -> [return: bb5, unwind: bb7];
    }

    bb5: {
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }

    bb6 (cleanup): {
        drop(_3) -> [return: bb7, unwind terminate(cleanup)];
    }

    bb7 (cleanup): {
        resume;
    }
}

name map {
    "y": _2,
    "c": _4,
    "x": _1,
    "v": _3,
}
locals map {
    _1: {
        bw0,
    },
    _3: {
        bw1,
    },
}
activation map {}, 
borrow_data for location bb0[4] : BorrowData {
    reserve_location: bb0[4],
    activation_location: NotTwoPhase,
    kind: Shared,
    region: '?2,
    borrowed_place: _1,
    assigned_place: _2,
}
hir_id HirId(DefId(0:3 ~ test_crate[7d47]::main).6)
expr Expr {
    hir_id: HirId(DefId(0:3 ~ test_crate[7d47]::main).6),
    kind: AddrOf(
        Ref,
        Not,
        Expr {
            hir_id: HirId(DefId(0:3 ~ test_crate[7d47]::main).7),
            kind: Path(
                Resolved(
                    None,
                    Path {
                        span: src/lib.rs:4:12: 4:13 (#0),
                        res: Local(
                            HirId(DefId(0:3 ~ test_crate[7d47]::main).4),
                        ),
                        segments: [
                            PathSegment {
                                ident: x#0,
                                hir_id: HirId(DefId(0:3 ~ test_crate[7d47]::main).8),
                                res: Local(
                                    HirId(DefId(0:3 ~ test_crate[7d47]::main).4),
                                ),
                                args: None,
                                infer_args: true,
                            },
                        ],
                    },
                ),
            ),
            span: src/lib.rs:4:12: 4:13 (#0),
        },
    ),
    span: src/lib.rs:4:11: 4:13 (#0),
}
borrow_data for location bb1[7] : BorrowData {
    reserve_location: bb1[7],
    activation_location: NotTwoPhase,
    kind: Shared,
    region: '?3,
    borrowed_place: _3,
    assigned_place: _8,
}
hir_id HirId(DefId(0:3 ~ test_crate[7d47]::main).28)
expr Expr {
    hir_id: HirId(DefId(0:3 ~ test_crate[7d47]::main).28),
    kind: Path(
        Resolved(
            None,
            Path {
                span: src/lib.rs:6:11: 6:12 (#0),
                res: Local(
                    HirId(DefId(0:3 ~ test_crate[7d47]::main).22),
                ),
                segments: [
                    PathSegment {
                        ident: v#0,
                        hir_id: HirId(DefId(0:3 ~ test_crate[7d47]::main).29),
                        res: Local(
                            HirId(DefId(0:3 ~ test_crate[7d47]::main).22),
                        ),
                        args: None,
                        infer_args: true,
                    },
                ],
            },
        ),
    ),
    span: src/lib.rs:6:11: 6:12 (#0),
}
t `std::vec::Vec<i32>`
fn_name "Vec::new"
unrecognized expr Expr {
    hir_id: HirId(DefId(0:3 ~ test_crate[7d47]::main).2),
    kind: Lit(
        Spanned {
            node: Int(
                Pu128(
                    7,
                ),
                Unsuffixed,
            ),
            span: src/lib.rs:3:11: 3:12 (#0),
        },
    ),
    span: src/lib.rs:3:11: 3:12 (#0),
}
unrecognized expr Expr {
    hir_id: HirId(DefId(0:3 ~ test_crate[7d47]::main).30),
    kind: Lit(
        Spanned {
            node: Int(
                Pu128(
                    0,
                ),
                Unsuffixed,
            ),
            span: src/lib.rs:6:17: 6:18 (#0),
        },
    ),
    span: src/lib.rs:6:17: 6:18 (#0),
}
BORROW MAP {
    "y": RefData {
        lender: Value(
            Owner(
                Owner {
                    name: "x",
                    hash: 1,
                    is_mut: false,
                },
            ),
        ),
        lifetime: 4,
        ref_mutability: false,
        aliasing: [],
    },
    "c": RefData {
        lender: Anonymous,
        lifetime: 6,
        ref_mutability: false,
        aliasing: [],
    },
}
lender to refs {
    "x": {
        "y",
    },
}
ultimate refs {
    "c",
    "y",
}
preprocessed events : [
    (
        3,
        Bind {
            from: Anonymous,
            to: Value(
                Owner(
                    Owner {
                        name: "x",
                        hash: 1,
                        is_mut: false,
                    },
                ),
            ),
            id: 0,
        },
    ),
    (
        4,
        StaticBorrow {
            from: Value(
                Owner(
                    Owner {
                        name: "x",
                        hash: 1,
                        is_mut: false,
                    },
                ),
            ),
            to: Value(
                StaticRef(
                    StaticRef {
                        name: "y",
                        hash: 2,
                        is_mut: false,
                    },
                ),
            ),
            id: 1,
        },
    ),
    (
        4,
        StaticDie {
            from: Value(
                StaticRef(
                    StaticRef {
                        name: "y",
                        hash: 2,
                        is_mut: false,
                    },
                ),
            ),
            to: Value(
                Owner(
                    Owner {
                        name: "x",
                        hash: 1,
                        is_mut: false,
                    },
                ),
            ),
            id: 6,
        },
    ),
    (
        5,
        Move {
            from: Value(
                Function(
                    Function {
                        name: "Vec::new",
                        hash: 3,
                    },
                ),
            ),
            to: Value(
                Struct(
                    Struct {
                        name: "v",
                        hash: 4,
                        owner: 4,
                        is_mut: false,
                        is_member: false,
                    },
                ),
            ),
            id: 2,
        },
    ),
    (
        6,
        PassByStaticReference {
            from: Value(
                Struct(
                    Struct {
                        name: "v",
                        hash: 4,
                        owner: 4,
                        is_mut: false,
                        is_member: false,
                    },
                ),
            ),
            to: Value(
                Function(
                    Function {
                        name: "get",
                        hash: 8,
                    },
                ),
            ),
            id: 3,
        },
    ),
    (
        6,
        Copy {
            from: Anonymous,
            to: Value(
                Function(
                    Function {
                        name: "get",
                        hash: 8,
                    },
                ),
            ),
            id: 4,
        },
    ),
    (
        6,
        Copy {
            from: Value(
                Function(
                    Function {
                        name: "unwrap",
                        hash: 7,
                    },
                ),
            ),
            to: Value(
                StaticRef(
                    StaticRef {
                        name: "c",
                        hash: 9,
                        is_mut: false,
                    },
                ),
            ),
            id: 5,
        },
    ),
    (
        6,
        StaticDie {
            from: Value(
                StaticRef(
                    StaticRef {
                        name: "c",
                        hash: 9,
                        is_mut: false,
                    },
                ),
            ),
            to: Deref(
                StaticRef(
                    StaticRef {
                        name: "c",
                        hash: 9,
                        is_mut: false,
                    },
                ),
            ),
            id: 7,
        },
    ),
    (
        7,
        GoOutOfScope {
            ro: StaticRef(
                StaticRef {
                    name: "c",
                    hash: 9,
                    is_mut: false,
                },
            ),
            id: 8,
        },
    ),
    (
        7,
        GoOutOfScope {
            ro: StaticRef(
                StaticRef {
                    name: "y",
                    hash: 2,
                    is_mut: false,
                },
            ),
            id: 9,
        },
    ),
    (
        7,
        GoOutOfScope {
            ro: Struct(
                Struct {
                    name: "v.len",
                    hash: 6,
                    owner: 4,
                    is_mut: false,
                    is_member: true,
                },
            ),
            id: 10,
        },
    ),
    (
        7,
        GoOutOfScope {
            ro: Owner(
                Owner {
                    name: "x",
                    hash: 1,
                    is_mut: false,
                },
            ),
            id: 11,
        },
    ),
    (
        7,
        GoOutOfScope {
            ro: Struct(
                Struct {
                    name: "v",
                    hash: 4,
                    owner: 4,
                    is_mut: false,
                    is_member: false,
                },
            ),
            id: 12,
        },
    ),
    (
        7,
        GoOutOfScope {
            ro: Struct(
                Struct {
                    name: "v.buf",
                    hash: 5,
                    owner: 4,
                    is_mut: false,
                    is_member: true,
                },
            ),
            id: 13,
        },
    ),
]
ev_line_map: {
    4: [
        StaticDie {
            from: Value(
                StaticRef(
                    StaticRef {
                        name: "y",
                        hash: 2,
                        is_mut: false,
                    },
                ),
            ),
            to: Value(
                Owner(
                    Owner {
                        name: "x",
                        hash: 1,
                        is_mut: false,
                    },
                ),
            ),
            id: 6,
        },
        StaticBorrow {
            from: Value(
                Owner(
                    Owner {
                        name: "x",
                        hash: 1,
                        is_mut: false,
                    },
                ),
            ),
            to: Value(
                StaticRef(
                    StaticRef {
                        name: "y",
                        hash: 2,
                        is_mut: false,
                    },
                ),
            ),
            id: 1,
        },
    ],
    6: [
        StaticDie {
            from: Value(
                StaticRef(
                    StaticRef {
                        name: "c",
                        hash: 9,
                        is_mut: false,
                    },
                ),
            ),
            to: Deref(
                StaticRef(
                    StaticRef {
                        name: "c",
                        hash: 9,
                        is_mut: false,
                    },
                ),
            ),
            id: 7,
        },
    ],
}
insert line map {
    7: 0,
    4: 1,
}
processed events [
    (
        3,
        Bind {
            from: Anonymous,
            to: Value(
                Owner(
                    Owner {
                        name: "x",
                        hash: 1,
                        is_mut: false,
                    },
                ),
            ),
            id: 0,
        },
    ),
    (
        4,
        StaticBorrow {
            from: Value(
                Owner(
                    Owner {
                        name: "x",
                        hash: 1,
                        is_mut: false,
                    },
                ),
            ),
            to: Value(
                StaticRef(
                    StaticRef {
                        name: "y",
                        hash: 2,
                        is_mut: false,
                    },
                ),
            ),
            id: 1,
        },
    ),
    (
        4,
        StaticDie {
            from: Value(
                StaticRef(
                    StaticRef {
                        name: "y",
                        hash: 2,
                        is_mut: false,
                    },
                ),
            ),
            to: Value(
                Owner(
                    Owner {
                        name: "x",
                        hash: 1,
                        is_mut: false,
                    },
                ),
            ),
            id: 6,
        },
    ),
    (
        4,
        StaticBorrow {
            from: Value(
                Owner(
                    Owner {
                        name: "x",
                        hash: 1,
                        is_mut: false,
                    },
                ),
            ),
            to: Value(
                StaticRef(
                    StaticRef {
                        name: "y",
                        hash: 2,
                        is_mut: false,
                    },
                ),
            ),
            id: 1,
        },
    ),
    (
        6,
        Move {
            from: Value(
                Function(
                    Function {
                        name: "Vec::new",
                        hash: 3,
                    },
                ),
            ),
            to: Value(
                Struct(
                    Struct {
                        name: "v",
                        hash: 4,
                        owner: 4,
                        is_mut: false,
                        is_member: false,
                    },
                ),
            ),
            id: 2,
        },
    ),
    (
        7,
        PassByStaticReference {
            from: Value(
                Struct(
                    Struct {
                        name: "v",
                        hash: 4,
                        owner: 4,
                        is_mut: false,
                        is_member: false,
                    },
                ),
            ),
            to: Value(
                Function(
                    Function {
                        name: "get",
                        hash: 8,
                    },
                ),
            ),
            id: 3,
        },
    ),
    (
        7,
        Copy {
            from: Anonymous,
            to: Value(
                Function(
                    Function {
                        name: "get",
                        hash: 8,
                    },
                ),
            ),
            id: 4,
        },
    ),
    (
        7,
        Copy {
            from: Value(
                Function(
                    Function {
                        name: "unwrap",
                        hash: 7,
                    },
                ),
            ),
            to: Value(
                StaticRef(
                    StaticRef {
                        name: "c",
                        hash: 9,
                        is_mut: false,
                    },
                ),
            ),
            id: 5,
        },
    ),
    (
        7,
        StaticDie {
            from: Value(
                StaticRef(
                    StaticRef {
                        name: "c",
                        hash: 9,
                        is_mut: false,
                    },
                ),
            ),
            to: Deref(
                StaticRef(
                    StaticRef {
                        name: "c",
                        hash: 9,
                        is_mut: false,
                    },
                ),
            ),
            id: 7,
        },
    ),
    (
        8,
        GoOutOfScope {
            ro: StaticRef(
                StaticRef {
                    name: "c",
                    hash: 9,
                    is_mut: false,
                },
            ),
            id: 8,
        },
    ),
    (
        8,
        GoOutOfScope {
            ro: StaticRef(
                StaticRef {
                    name: "y",
                    hash: 2,
                    is_mut: false,
                },
            ),
            id: 9,
        },
    ),
    (
        8,
        GoOutOfScope {
            ro: Struct(
                Struct {
                    name: "v.len",
                    hash: 6,
                    owner: 4,
                    is_mut: false,
                    is_member: true,
                },
            ),
            id: 10,
        },
    ),
    (
        8,
        GoOutOfScope {
            ro: Owner(
                Owner {
                    name: "x",
                    hash: 1,
                    is_mut: false,
                },
            ),
            id: 11,
        },
    ),
    (
        8,
        GoOutOfScope {
            ro: Struct(
                Struct {
                    name: "v",
                    hash: 4,
                    owner: 4,
                    is_mut: false,
                    is_member: false,
                },
            ),
            id: 12,
        },
    ),
    (
        8,
        GoOutOfScope {
            ro: Struct(
                Struct {
                    name: "v.buf",
                    hash: 5,
                    owner: 4,
                    is_mut: false,
                    is_member: true,
                },
            ),
            id: 13,
        },
    ),
]
processed line map {
    4: [
        StaticDie {
            from: Value(
                StaticRef(
                    StaticRef {
                        name: "y",
                        hash: 2,
                        is_mut: false,
                    },
                ),
            ),
            to: Value(
                Owner(
                    Owner {
                        name: "x",
                        hash: 1,
                        is_mut: false,
                    },
                ),
            ),
            id: 6,
        },
        StaticBorrow {
            from: Value(
                Owner(
                    Owner {
                        name: "x",
                        hash: 1,
                        is_mut: false,
                    },
                ),
            ),
            to: Value(
                StaticRef(
                    StaticRef {
                        name: "y",
                        hash: 2,
                        is_mut: false,
                    },
                ),
            ),
            id: 1,
        },
    ],
    7: [
        StaticDie {
            from: Value(
                StaticRef(
                    StaticRef {
                        name: "c",
                        hash: 9,
                        is_mut: false,
                    },
                ),
            ),
            to: Deref(
                StaticRef(
                    StaticRef {
                        name: "c",
                        hash: 9,
                        is_mut: false,
                    },
                ),
            ),
            id: 7,
        },
    ],
}
w_map {
    7: 0,
    5: 0,
    8: 0,
    9: 0,
    6: 0,
    1: 0,
    2: 0,
    3: 0,
    4: 0,
}
hash 1, timeline Timeline {
    resource_access_point: Owner(
        Owner {
            name: "x",
            hash: 1,
            is_mut: false,
        },
    ),
    history: [
        (
            3,
            Acquire {
                from: Anonymous,
                is: Value(
                    Owner(
                        Owner {
                            name: "x",
                            hash: 1,
                            is_mut: false,
                        },
                    ),
                ),
                id: 0,
            },
        ),
        (
            4,
            StaticLend {
                to: Value(
                    StaticRef(
                        StaticRef {
                            name: "y",
                            hash: 2,
                            is_mut: false,
                        },
                    ),
                ),
                is: Value(
                    Owner(
                        Owner {
                            name: "x",
                            hash: 1,
                            is_mut: false,
                        },
                    ),
                ),
                id: 1,
            },
        ),
        (
            4,
            StaticReacquire {
                from: Value(
                    StaticRef(
                        StaticRef {
                            name: "y",
                            hash: 2,
                            is_mut: false,
                        },
                    ),
                ),
                is: Value(
                    Owner(
                        Owner {
                            name: "x",
                            hash: 1,
                            is_mut: false,
                        },
                    ),
                ),
                id: 6,
            },
        ),
        (
            4,
            StaticLend {
                to: Value(
                    StaticRef(
                        StaticRef {
                            name: "y",
                            hash: 2,
                            is_mut: false,
                        },
                    ),
                ),
                is: Value(
                    Owner(
                        Owner {
                            name: "x",
                            hash: 1,
                            is_mut: false,
                        },
                    ),
                ),
                id: 1,
            },
        ),
        (
            8,
            OwnerGoOutOfScope,
        ),
    ],
    states: [
        (
            1,
            3,
            OutOfScope,
        ),
        (
            3,
            4,
            FullPrivilege {
                s: Full,
            },
        ),
        (
            4,
            4,
            PartialPrivilege {
                s: Full,
            },
        ),
        (
            4,
            4,
            FullPrivilege {
                s: Full,
            },
        ),
        (
            4,
            8,
            PartialPrivilege {
                s: Full,
            },
        ),
        (
            8,
            8,
            OutOfScope,
        ),
    ],
}
hash 2, timeline Timeline {
    resource_access_point: StaticRef(
        StaticRef {
            name: "y",
            hash: 2,
            is_mut: false,
        },
    ),
    history: [
        (
            4,
            StaticBorrow {
                from: Value(
                    Owner(
                        Owner {
                            name: "x",
                            hash: 1,
                            is_mut: false,
                        },
                    ),
                ),
                is: Value(
                    StaticRef(
                        StaticRef {
                            name: "y",
                            hash: 2,
                            is_mut: false,
                        },
                    ),
                ),
                id: 1,
            },
        ),
        (
            4,
            StaticDie {
                to: Value(
                    Owner(
                        Owner {
                            name: "x",
                            hash: 1,
                            is_mut: false,
                        },
                    ),
                ),
                is: Value(
                    StaticRef(
                        StaticRef {
                            name: "y",
                            hash: 2,
                            is_mut: false,
                        },
                    ),
                ),
                id: 6,
            },
        ),
        (
            4,
            StaticBorrow {
                from: Value(
                    Owner(
                        Owner {
                            name: "x",
                            hash: 1,
                            is_mut: false,
                        },
                    ),
                ),
                is: Value(
                    StaticRef(
                        StaticRef {
                            name: "y",
                            hash: 2,
                            is_mut: false,
                        },
                    ),
                ),
                id: 1,
            },
        ),
        (
            8,
            RefGoOutOfScope,
        ),
    ],
    states: [
        (
            1,
            4,
            OutOfScope,
        ),
        (
            4,
            4,
            PartialPrivilege {
                s: Full,
            },
        ),
        (
            4,
            4,
            OutOfScope,
        ),
        (
            4,
            8,
            PartialPrivilege {
                s: Full,
            },
        ),
        (
            8,
            8,
            OutOfScope,
        ),
    ],
}
hash 4, timeline Timeline {
    resource_access_point: Struct(
        Struct {
            name: "v",
            hash: 4,
            owner: 4,
            is_mut: false,
            is_member: false,
        },
    ),
    history: [
        (
            6,
            Acquire {
                from: Value(
                    Function(
                        Function {
                            name: "Vec::new",
                            hash: 3,
                        },
                    ),
                ),
                is: Value(
                    Struct(
                        Struct {
                            name: "v",
                            hash: 4,
                            owner: 4,
                            is_mut: false,
                            is_member: false,
                        },
                    ),
                ),
                id: 2,
            },
        ),
        (
            7,
            StaticLend {
                to: Value(
                    Function(
                        Function {
                            name: "get",
                            hash: 8,
                        },
                    ),
                ),
                is: Value(
                    Struct(
                        Struct {
                            name: "v",
                            hash: 4,
                            owner: 4,
                            is_mut: false,
                            is_member: false,
                        },
                    ),
                ),
                id: 3,
            },
        ),
        (
            7,
            StaticReacquire {
                from: Value(
                    Function(
                        Function {
                            name: "get",
                            hash: 8,
                        },
                    ),
                ),
                is: Value(
                    Struct(
                        Struct {
                            name: "v",
                            hash: 4,
                            owner: 4,
                            is_mut: false,
                            is_member: false,
                        },
                    ),
                ),
                id: 3,
            },
        ),
        (
            8,
            OwnerGoOutOfScope,
        ),
    ],
    states: [
        (
            1,
            6,
            OutOfScope,
        ),
        (
            6,
            7,
            FullPrivilege {
                s: Full,
            },
        ),
        (
            7,
            7,
            PartialPrivilege {
                s: Full,
            },
        ),
        (
            7,
            8,
            FullPrivilege {
                s: Full,
            },
        ),
        (
            8,
            8,
            OutOfScope,
        ),
    ],
}
hash 5, timeline Timeline {
    resource_access_point: Struct(
        Struct {
            name: "v.buf",
            hash: 5,
            owner: 4,
            is_mut: false,
            is_member: true,
        },
    ),
    history: [
        (
            8,
            OwnerGoOutOfScope,
        ),
    ],
    states: [
        (
            1,
            8,
            OutOfScope,
        ),
    ],
}
hash 6, timeline Timeline {
    resource_access_point: Struct(
        Struct {
            name: "v.len",
            hash: 6,
            owner: 4,
            is_mut: false,
            is_member: true,
        },
    ),
    history: [
        (
            8,
            OwnerGoOutOfScope,
        ),
    ],
    states: [
        (
            1,
            8,
            OutOfScope,
        ),
    ],
}
hash 9, timeline Timeline {
    resource_access_point: StaticRef(
        StaticRef {
            name: "c",
            hash: 9,
            is_mut: false,
        },
    ),
    history: [
        (
            7,
            Copy {
                from: Value(
                    Function(
                        Function {
                            name: "unwrap",
                            hash: 7,
                        },
                    ),
                ),
                is: Value(
                    StaticRef(
                        StaticRef {
                            name: "c",
                            hash: 9,
                            is_mut: false,
                        },
                    ),
                ),
                id: 5,
            },
        ),
        (
            7,
            StaticReacquire {
                from: Value(
                    StaticRef(
                        StaticRef {
                            name: "c",
                            hash: 9,
                            is_mut: false,
                        },
                    ),
                ),
                is: Deref(
                    StaticRef(
                        StaticRef {
                            name: "c",
                            hash: 9,
                            is_mut: false,
                        },
                    ),
                ),
                id: 7,
            },
        ),
        (
            7,
            StaticDie {
                to: Deref(
                    StaticRef(
                        StaticRef {
                            name: "c",
                            hash: 9,
                            is_mut: false,
                        },
                    ),
                ),
                is: Value(
                    StaticRef(
                        StaticRef {
                            name: "c",
                            hash: 9,
                            is_mut: false,
                        },
                    ),
                ),
                id: 7,
            },
        ),
        (
            8,
            RefGoOutOfScope,
        ),
    ],
    states: [
        (
            1,
            7,
            OutOfScope,
        ),
        (
            7,
            7,
            FullPrivilege {
                s: Full,
            },
        ),
        (
            7,
            7,
            Invalid,
        ),
        (
            7,
            8,
            Invalid,
        ),
        (
            8,
            8,
            Invalid,
        ),
    ],
}
PREV STATE OutOfScope
PREV STATE OutOfScope
PREV STATE OutOfScope
PREV STATE OutOfScope
PREV STATE OutOfScope
PREV STATE OutOfScope
