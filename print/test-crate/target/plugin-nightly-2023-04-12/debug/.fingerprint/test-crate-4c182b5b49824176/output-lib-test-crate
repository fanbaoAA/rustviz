fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at src/lib.rs:1:11: 1:11
    let mut _6: &'_#69r mut std::string::String; // in scope 0 at src/lib.rs:6:16: 6:19
    let _9: ();                          // in scope 0 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:136:23: 138:6
    let _10: ();                         // in scope 0 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:9: 137:62
    let mut _11: std::fmt::Arguments<'_#71r>; // in scope 0 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
    let mut _12: &'_#72r [&'_#73r str];  // in scope 0 at src/lib.rs:9:14: 9:18
    let mut _13: &'_#74r [&'_#75r str; 2]; // in scope 0 at src/lib.rs:9:14: 9:18
    let _14: &'_#76r [&'_#77r str; 2];   // in scope 0 at src/lib.rs:9:14: 9:18
    let _15: [&'_#78r str; 2];           // in scope 0 at src/lib.rs:9:14: 9:18
    let mut _16: &'_#79r [core::fmt::ArgumentV1<'_#80r>]; // in scope 0 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
    let mut _17: &'_#81r [core::fmt::ArgumentV1<'_#82r>; 1]; // in scope 0 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
    let _18: &'_#83r [core::fmt::ArgumentV1<'_#84r>; 1]; // in scope 0 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
    let _19: [core::fmt::ArgumentV1<'_#85r>; 1]; // in scope 0 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
    let mut _20: core::fmt::ArgumentV1<'_#86r>; // in scope 0 at src/lib.rs:9:15: 9:17
    let mut _21: &'_#87r &'_#88r mut std::string::String; // in scope 0 at src/lib.rs:9:19: 9:22
    let _22: &'_#89r &'_#90r mut std::string::String; // in scope 0 at src/lib.rs:9:19: 9:22
    let _26: ();                         // in scope 0 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:136:23: 138:6
    let _27: ();                         // in scope 0 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:9: 137:62
    let mut _28: std::fmt::Arguments<'_#91r>; // in scope 0 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
    let mut _29: &'_#92r [&'_#93r str];  // in scope 0 at src/lib.rs:13:16: 13:34
    let mut _30: &'_#94r [&'_#95r str; 3]; // in scope 0 at src/lib.rs:13:16: 13:34
    let _31: &'_#96r [&'_#97r str; 3];   // in scope 0 at src/lib.rs:13:16: 13:34
    let _32: [&'_#98r str; 3];           // in scope 0 at src/lib.rs:13:16: 13:34
    let mut _33: &'_#99r [core::fmt::ArgumentV1<'_#100r>]; // in scope 0 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
    let mut _34: &'_#101r [core::fmt::ArgumentV1<'_#102r>; 2]; // in scope 0 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
    let _35: &'_#103r [core::fmt::ArgumentV1<'_#104r>; 2]; // in scope 0 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
    let _36: [core::fmt::ArgumentV1<'_#105r>; 2]; // in scope 0 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
    let mut _37: core::fmt::ArgumentV1<'_#106r>; // in scope 0 at src/lib.rs:13:21: 13:25
    let mut _38: &'_#107r std::string::String; // in scope 0 at src/lib.rs:13:35: 13:37
    let _39: &'_#108r std::string::String; // in scope 0 at src/lib.rs:13:35: 13:37
    let mut _40: core::fmt::ArgumentV1<'_#109r>; // in scope 0 at src/lib.rs:13:31: 13:33
    let mut _41: &'_#110r std::string::String; // in scope 0 at src/lib.rs:13:38: 13:40
    let _42: &'_#111r std::string::String; // in scope 0 at src/lib.rs:13:38: 13:40
    scope 1 {
        scope 2 {
            debug s => _1;               // in scope 2 at src/lib.rs:2:7: 2:12
            scope 7 {
                debug s1 => _2;          // in scope 7 at src/lib.rs:3:7: 3:13
                scope 12 {
                    debug sr => _3;      // in scope 12 at src/lib.rs:4:7: 4:9
                    scope 16 {
                        debug s1r => _4; // in scope 16 at src/lib.rs:5:7: 5:10
                        scope 20 {
                            debug ssr => _5; // in scope 20 at src/lib.rs:6:7: 6:10
                            scope 25 {
                                debug a => _7; // in scope 25 at src/lib.rs:7:7: 7:8
                            }
                            scope 26 {
                                let _7: (); // in scope 26 at src/lib.rs:7:7: 7:8
                                scope 27 {
                                    scope 28 {
                                        debug sr1 => _8; // in scope 28 at src/lib.rs:8:9: 8:12
                                        scope 31 {
                                            scope 32 {
                                                scope 33 {
                                                }
                                                scope 34 {
                                                    scope 35 {
                                                    }
                                                    scope 36 {
                                                        let mut _44: &'_#114r [&'_#115r str; 2]; // in scope 36 at src/lib.rs:9:14: 9:18
                                                        scope 37 {
                                                            scope 38 {
                                                            }
                                                            scope 39 {
                                                            }
                                                        }
                                                    }
                                                    scope 40 {
                                                        scope 41 {
                                                            scope 42 {
                                                                scope 43 {
                                                                }
                                                                scope 44 {
                                                                    scope 45 {
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        scope 46 {
                                            debug b => _23; // in scope 46 at src/lib.rs:10:9: 10:10
                                        }
                                        scope 47 {
                                            let _23: (); // in scope 47 at src/lib.rs:10:9: 10:10
                                            scope 48 {
                                                scope 49 {
                                                    debug s2 => _24; // in scope 49 at src/lib.rs:11:11: 11:13
                                                    scope 54 {
                                                        debug s3 => _25; // in scope 54 at src/lib.rs:12:11: 12:13
                                                        scope 59 {
                                                            scope 60 {
                                                                scope 61 {
                                                                }
                                                                scope 62 {
                                                                    scope 63 {
                                                                    }
                                                                    scope 64 {
                                                                        let mut _43: &'_#112r [&'_#113r str; 3]; // in scope 64 at src/lib.rs:13:16: 13:34
                                                                        scope 65 {
                                                                            scope 66 {
                                                                            }
                                                                            scope 67 {
                                                                            }
                                                                            scope 68 {
                                                                            }
                                                                        }
                                                                    }
                                                                    scope 69 {
                                                                        scope 70 {
                                                                            scope 71 {
                                                                                scope 72 {
                                                                                }
                                                                                scope 73 {
                                                                                    scope 74 {
                                                                                    }
                                                                                }
                                                                            }
                                                                            scope 75 {
                                                                                scope 76 {
                                                                                }
                                                                                scope 77 {
                                                                                    scope 78 {
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                    scope 55 {
                                                        let _25: std::string::String; // in scope 55 at src/lib.rs:12:11: 12:13
                                                        scope 56 {
                                                            scope 57 {
                                                            }
                                                            scope 58 {
                                                            }
                                                        }
                                                    }
                                                }
                                                scope 50 {
                                                    let _24: std::string::String; // in scope 50 at src/lib.rs:11:11: 11:13
                                                    scope 51 {
                                                        scope 52 {
                                                        }
                                                        scope 53 {
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    scope 29 {
                                        let _8: &'_#70r mut std::string::String; // in scope 29 at src/lib.rs:8:9: 8:12
                                        scope 30 {
                                        }
                                    }
                                }
                            }
                        }
                        scope 21 {
                            let _5: &'_#68r mut std::string::String; // in scope 21 at src/lib.rs:6:7: 6:10
                            scope 22 {
                                scope 23 {
                                }
                                scope 24 {
                                }
                            }
                        }
                    }
                    scope 17 {
                        let _4: &'_#67r mut std::string::String; // in scope 17 at src/lib.rs:5:7: 5:10
                        scope 18 {
                            scope 19 {
                            }
                        }
                    }
                }
                scope 13 {
                    let _3: &'_#66r mut std::string::String; // in scope 13 at src/lib.rs:4:7: 4:9
                    scope 14 {
                        scope 15 {
                        }
                    }
                }
            }
            scope 8 {
                let mut _2: std::string::String; // in scope 8 at src/lib.rs:3:7: 3:13
                scope 9 {
                    scope 10 {
                    }
                    scope 11 {
                    }
                }
            }
        }
        scope 3 {
            let mut _1: std::string::String; // in scope 3 at src/lib.rs:2:7: 2:12
            scope 4 {
                scope 5 {
                }
                scope 6 {
                }
            }
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 3 at src/lib.rs:2:7: 2:12
        _1 = <std::string::String as std::convert::From<&'_#21r str>>::from(const "hello") -> [return: bb1, unwind: bb21]; // scope 4 at src/lib.rs:2:15: 2:36
                                         // mir::Constant
                                         // + span: src/lib.rs:2:15: 2:27
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&'_#21r str) -> std::string::String {<std::string::String as std::convert::From<&'_#21r str>>::from}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: src/lib.rs:2:28: 2:35
                                         // + literal: Const { ty: &'_#22r str, val: Value(Slice(..)) }
    }

    bb1: {
        FakeRead(ForLet(None), _1);      // scope 3 at src/lib.rs:2:7: 2:12
        StorageLive(_2);                 // scope 8 at src/lib.rs:3:7: 3:13
        _2 = <std::string::String as std::convert::From<&'_#23r str>>::from(const "hello") -> [return: bb2, unwind: bb20]; // scope 9 at src/lib.rs:3:15: 3:36
                                         // mir::Constant
                                         // + span: src/lib.rs:3:15: 3:27
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&'_#23r str) -> std::string::String {<std::string::String as std::convert::From<&'_#23r str>>::from}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: src/lib.rs:3:28: 3:35
                                         // + literal: Const { ty: &'_#24r str, val: Value(Slice(..)) }
    }

    bb2: {
        FakeRead(ForLet(None), _2);      // scope 8 at src/lib.rs:3:7: 3:13
        StorageLive(_3);                 // scope 13 at src/lib.rs:4:7: 4:9
        _3 = &'_#25r mut _1;             // scope 14 at src/lib.rs:4:12: 4:18
        FakeRead(ForLet(None), _3);      // scope 13 at src/lib.rs:4:7: 4:9
        StorageLive(_4);                 // scope 17 at src/lib.rs:5:7: 5:10
        _4 = &'_#26r mut _2;             // scope 18 at src/lib.rs:5:12: 5:19
        FakeRead(ForLet(None), _4);      // scope 17 at src/lib.rs:5:7: 5:10
        StorageLive(_5);                 // scope 21 at src/lib.rs:6:7: 6:10
        StorageLive(_6);                 // scope 24 at src/lib.rs:6:16: 6:19
        _6 = &'_#27r mut (*_4);          // scope 24 at src/lib.rs:6:16: 6:19
        _5 = foo(move _6) -> [return: bb3, unwind: bb19]; // scope 22 at src/lib.rs:6:12: 6:20
                                         // mir::Constant
                                         // + span: src/lib.rs:6:12: 6:15
                                         // + literal: Const { ty: for<'a> fn(&'a mut std::string::String) -> &'a mut std::string::String {foo}, val: Value(<ZST>) }
    }

    bb3: {
        StorageDead(_6);                 // scope 22 at src/lib.rs:6:19: 6:20
        FakeRead(ForLet(None), _5);      // scope 21 at src/lib.rs:6:7: 6:10
        StorageLive(_7);                 // scope 26 at src/lib.rs:7:7: 7:8
        StorageLive(_8);                 // scope 29 at src/lib.rs:8:9: 8:12
        _8 = move _3;                    // scope 30 at src/lib.rs:8:14: 8:16
        FakeRead(ForLet(None), _8);      // scope 29 at src/lib.rs:8:9: 8:12
        StorageLive(_9);                 // scope 31 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:136:23: 138:6
        StorageLive(_10);                // scope 32 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:9: 137:62
        StorageLive(_11);                // scope 34 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
        StorageLive(_12);                // scope 36 at src/lib.rs:9:14: 9:18
        StorageLive(_13);                // scope 36 at src/lib.rs:9:14: 9:18
        StorageLive(_14);                // scope 36 at src/lib.rs:9:14: 9:18
        _44 = const _;                   // scope 36 at src/lib.rs:9:14: 9:18
                                         // mir::Constant
                                         // + span: src/lib.rs:9:14: 9:18
                                         // + literal: Const { ty: &'_#28r [&'_#29r str; 2], val: Unevaluated(main, [], Some(promoted[1])) }
        _14 = &'_#30r (*_44);            // scope 36 at src/lib.rs:9:14: 9:18
        _13 = &'_#31r (*_14);            // scope 36 at src/lib.rs:9:14: 9:18
        _12 = move _13 as &'_#32r [&'_#33r str] (Pointer(Unsize)); // scope 36 at src/lib.rs:9:14: 9:18
        StorageDead(_13);                // scope 36 at src/lib.rs:9:17: 9:18
        StorageLive(_16);                // scope 40 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
        StorageLive(_17);                // scope 40 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
        StorageLive(_18);                // scope 40 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
        StorageLive(_19);                // scope 41 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
        StorageLive(_20);                // scope 42 at src/lib.rs:9:15: 9:17
        StorageLive(_21);                // scope 44 at src/lib.rs:9:19: 9:22
        StorageLive(_22);                // scope 44 at src/lib.rs:9:19: 9:22
        _22 = &'_#34r _8;                // scope 44 at src/lib.rs:9:19: 9:22
        _21 = &'_#35r (*_22);            // scope 44 at src/lib.rs:9:19: 9:22
        _20 = core::fmt::ArgumentV1::<'_#36r>::new_display::<&'_#37r mut std::string::String>(move _21) -> [return: bb4, unwind: bb19]; // scope 42 at src/lib.rs:9:15: 9:17
                                         // mir::Constant
                                         // + span: src/lib.rs:9:15: 9:17
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b &'_#37r mut std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_#36r>::new_display::<&'_#37r mut std::string::String>}, val: Value(<ZST>) }
    }

    bb4: {
        StorageDead(_21);                // scope 42 at src/lib.rs:9:16: 9:17
        _19 = [move _20];                // scope 41 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
        StorageDead(_20);                // scope 41 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:60: 137:61
        _18 = &'_#39r _19;               // scope 40 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
        _17 = &'_#40r (*_18);            // scope 40 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
        _16 = move _17 as &'_#41r [core::fmt::ArgumentV1<'_#42r>] (Pointer(Unsize)); // scope 40 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
        StorageDead(_17);                // scope 40 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:60: 137:61
        _11 = std::fmt::Arguments::<'_#43r>::new_v1(move _12, move _16) -> [return: bb5, unwind: bb19]; // scope 34 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&'_#43r [&'static str], &'_#43r [core::fmt::ArgumentV1<'_#43r>]) -> std::fmt::Arguments<'_#43r> {std::fmt::Arguments::<'_#43r>::new_v1}, val: Value(<ZST>) }
    }

    bb5: {
        StorageDead(_16);                // scope 34 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:60: 137:61
        StorageDead(_12);                // scope 34 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:60: 137:61
        _10 = std::io::_print(move _11) -> [return: bb6, unwind: bb19]; // scope 32 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(std::fmt::Arguments<'a>) {std::io::_print}, val: Value(<ZST>) }
    }

    bb6: {
        StorageDead(_11);                // scope 32 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:61: 137:62
        StorageDead(_22);                // scope 31 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:62: 137:63
        StorageDead(_19);                // scope 31 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:62: 137:63
        StorageDead(_18);                // scope 31 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:62: 137:63
        StorageDead(_14);                // scope 31 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:62: 137:63
        StorageDead(_10);                // scope 31 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:62: 137:63
        _9 = const ();                   // scope 31 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:136:23: 138:6
        StorageDead(_9);                 // scope 28 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:138:5: 138:6
        StorageLive(_23);                // scope 47 at src/lib.rs:10:9: 10:10
        StorageLive(_24);                // scope 50 at src/lib.rs:11:11: 11:13
        _24 = <std::string::String as std::convert::From<&'_#44r str>>::from(const "hello") -> [return: bb7, unwind: bb19]; // scope 51 at src/lib.rs:11:14: 11:35
                                         // mir::Constant
                                         // + span: src/lib.rs:11:14: 11:26
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&'_#44r str) -> std::string::String {<std::string::String as std::convert::From<&'_#44r str>>::from}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: src/lib.rs:11:27: 11:34
                                         // + literal: Const { ty: &'_#45r str, val: Value(Slice(..)) }
    }

    bb7: {
        FakeRead(ForLet(None), _24);     // scope 50 at src/lib.rs:11:11: 11:13
        StorageLive(_25);                // scope 55 at src/lib.rs:12:11: 12:13
        _25 = <std::string::String as std::convert::From<&'_#46r str>>::from(const "hello") -> [return: bb8, unwind: bb18]; // scope 56 at src/lib.rs:12:14: 12:35
                                         // mir::Constant
                                         // + span: src/lib.rs:12:14: 12:26
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: fn(&'_#46r str) -> std::string::String {<std::string::String as std::convert::From<&'_#46r str>>::from}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: src/lib.rs:12:27: 12:34
                                         // + literal: Const { ty: &'_#47r str, val: Value(Slice(..)) }
    }

    bb8: {
        FakeRead(ForLet(None), _25);     // scope 55 at src/lib.rs:12:11: 12:13
        StorageLive(_26);                // scope 59 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:136:23: 138:6
        StorageLive(_27);                // scope 60 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:9: 137:62
        StorageLive(_28);                // scope 62 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
        StorageLive(_29);                // scope 64 at src/lib.rs:13:16: 13:34
        StorageLive(_30);                // scope 64 at src/lib.rs:13:16: 13:34
        StorageLive(_31);                // scope 64 at src/lib.rs:13:16: 13:34
        _43 = const _;                   // scope 64 at src/lib.rs:13:16: 13:34
                                         // mir::Constant
                                         // + span: src/lib.rs:13:16: 13:34
                                         // + literal: Const { ty: &'_#48r [&'_#49r str; 3], val: Unevaluated(main, [], Some(promoted[0])) }
        _31 = &'_#50r (*_43);            // scope 64 at src/lib.rs:13:16: 13:34
        _30 = &'_#51r (*_31);            // scope 64 at src/lib.rs:13:16: 13:34
        _29 = move _30 as &'_#52r [&'_#53r str] (Pointer(Unsize)); // scope 64 at src/lib.rs:13:16: 13:34
        StorageDead(_30);                // scope 64 at src/lib.rs:13:33: 13:34
        StorageLive(_33);                // scope 69 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
        StorageLive(_34);                // scope 69 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
        StorageLive(_35);                // scope 69 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
        StorageLive(_36);                // scope 70 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
        StorageLive(_37);                // scope 71 at src/lib.rs:13:21: 13:25
        StorageLive(_38);                // scope 73 at src/lib.rs:13:35: 13:37
        StorageLive(_39);                // scope 73 at src/lib.rs:13:35: 13:37
        _39 = &'_#54r _24;               // scope 73 at src/lib.rs:13:35: 13:37
        _38 = &'_#55r (*_39);            // scope 73 at src/lib.rs:13:35: 13:37
        _37 = core::fmt::ArgumentV1::<'_#56r>::new_debug::<std::string::String>(move _38) -> [return: bb9, unwind: bb17]; // scope 71 at src/lib.rs:13:21: 13:25
                                         // mir::Constant
                                         // + span: src/lib.rs:13:21: 13:25
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_#56r>::new_debug::<std::string::String>}, val: Value(<ZST>) }
    }

    bb9: {
        StorageDead(_38);                // scope 71 at src/lib.rs:13:24: 13:25
        StorageLive(_40);                // scope 75 at src/lib.rs:13:31: 13:33
        StorageLive(_41);                // scope 77 at src/lib.rs:13:38: 13:40
        StorageLive(_42);                // scope 77 at src/lib.rs:13:38: 13:40
        _42 = &'_#57r _25;               // scope 77 at src/lib.rs:13:38: 13:40
        _41 = &'_#58r (*_42);            // scope 77 at src/lib.rs:13:38: 13:40
        _40 = core::fmt::ArgumentV1::<'_#59r>::new_display::<std::string::String>(move _41) -> [return: bb10, unwind: bb17]; // scope 75 at src/lib.rs:13:31: 13:33
                                         // mir::Constant
                                         // + span: src/lib.rs:13:31: 13:33
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: for<'b> fn(&'b std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_#59r>::new_display::<std::string::String>}, val: Value(<ZST>) }
    }

    bb10: {
        StorageDead(_41);                // scope 75 at src/lib.rs:13:32: 13:33
        _36 = [move _37, move _40];      // scope 70 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
        StorageDead(_40);                // scope 70 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:60: 137:61
        StorageDead(_37);                // scope 70 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:60: 137:61
        _35 = &'_#61r _36;               // scope 69 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
        _34 = &'_#62r (*_35);            // scope 69 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
        _33 = move _34 as &'_#63r [core::fmt::ArgumentV1<'_#64r>] (Pointer(Unsize)); // scope 69 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
        StorageDead(_34);                // scope 69 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:60: 137:61
        _28 = std::fmt::Arguments::<'_#65r>::new_v1(move _29, move _33) -> [return: bb11, unwind: bb17]; // scope 62 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&'_#65r [&'static str], &'_#65r [core::fmt::ArgumentV1<'_#65r>]) -> std::fmt::Arguments<'_#65r> {std::fmt::Arguments::<'_#65r>::new_v1}, val: Value(<ZST>) }
    }

    bb11: {
        StorageDead(_33);                // scope 62 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:60: 137:61
        StorageDead(_29);                // scope 62 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:60: 137:61
        _27 = std::io::_print(move _28) -> [return: bb12, unwind: bb17]; // scope 60 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(std::fmt::Arguments<'a>) {std::io::_print}, val: Value(<ZST>) }
    }

    bb12: {
        StorageDead(_28);                // scope 60 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:61: 137:62
        StorageDead(_42);                // scope 59 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:62: 137:63
        StorageDead(_39);                // scope 59 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:62: 137:63
        StorageDead(_36);                // scope 59 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:62: 137:63
        StorageDead(_35);                // scope 59 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:62: 137:63
        StorageDead(_31);                // scope 59 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:62: 137:63
        StorageDead(_27);                // scope 59 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:137:62: 137:63
        _26 = const ();                  // scope 59 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:136:23: 138:6
        StorageDead(_26);                // scope 54 at /rustc/9df3a39fb30575d808e70800f9fad5362aac57a2/library/std/src/macros.rs:138:5: 138:6
        _23 = const ();                  // scope 48 at src/lib.rs:10:13: 14:6
        drop(_25) -> [return: bb13, unwind: bb18]; // scope 49 at src/lib.rs:14:5: 14:6
    }

    bb13: {
        StorageDead(_25);                // scope 49 at src/lib.rs:14:5: 14:6
        drop(_24) -> [return: bb14, unwind: bb19]; // scope 48 at src/lib.rs:14:5: 14:6
    }

    bb14: {
        StorageDead(_24);                // scope 48 at src/lib.rs:14:5: 14:6
        FakeRead(ForLet(None), _23);     // scope 47 at src/lib.rs:10:9: 10:10
        _7 = const ();                   // scope 27 at src/lib.rs:7:11: 15:4
        StorageDead(_23);                // scope 28 at src/lib.rs:15:3: 15:4
        StorageDead(_8);                 // scope 27 at src/lib.rs:15:3: 15:4
        FakeRead(ForLet(None), _7);      // scope 26 at src/lib.rs:7:7: 7:8
        _0 = const ();                   // scope 1 at src/lib.rs:1:11: 17:2
        StorageDead(_7);                 // scope 20 at src/lib.rs:17:1: 17:2
        StorageDead(_5);                 // scope 16 at src/lib.rs:17:1: 17:2
        StorageDead(_4);                 // scope 12 at src/lib.rs:17:1: 17:2
        StorageDead(_3);                 // scope 7 at src/lib.rs:17:1: 17:2
        drop(_2) -> [return: bb15, unwind: bb20]; // scope 2 at src/lib.rs:17:1: 17:2
    }

    bb15: {
        StorageDead(_2);                 // scope 2 at src/lib.rs:17:1: 17:2
        drop(_1) -> [return: bb16, unwind: bb21]; // scope 1 at src/lib.rs:17:1: 17:2
    }

    bb16: {
        StorageDead(_1);                 // scope 1 at src/lib.rs:17:1: 17:2
        return;                          // scope 0 at src/lib.rs:17:2: 17:2
    }

    bb17 (cleanup): {
        drop(_25) -> [return: bb18, unwind terminate]; // scope 49 at src/lib.rs:14:5: 14:6
    }

    bb18 (cleanup): {
        drop(_24) -> [return: bb19, unwind terminate]; // scope 48 at src/lib.rs:14:5: 14:6
    }

    bb19 (cleanup): {
        drop(_2) -> [return: bb20, unwind terminate]; // scope 2 at src/lib.rs:17:1: 17:2
    }

    bb20 (cleanup): {
        drop(_1) -> [return: bb21, unwind terminate]; // scope 1 at src/lib.rs:17:1: 17:2
    }

    bb21 (cleanup): {
        resume;                          // scope 0 at src/lib.rs:1:1: 17:2
    }
}
fn returnone() -> usize {
    let mut _0: usize;                   // return place in scope 0 at src/lib.rs:18:17: 18:22
    scope 1 {
        scope 2 {
        }
    }

    bb0: {
        _0 = const 1_usize;              // scope 2 at src/lib.rs:19:3: 19:4
        return;                          // scope 0 at src/lib.rs:20:2: 20:2
    }
}
fn returnonetup() -> (usize, usize) {
    let mut _0: (usize, usize);          // return place in scope 0 at src/lib.rs:21:20: 21:33
    scope 1 {
        scope 2 {
            scope 3 {
            }
            scope 4 {
            }
        }
    }

    bb0: {
        _0 = (const 1_usize, const 1_usize); // scope 2 at src/lib.rs:22:3: 22:8
        return;                          // scope 0 at src/lib.rs:23:2: 23:2
    }
}
fn takestring_returnone(_1: std::string::String, _2: &'_#4r std::string::String, _3: &'_#5r mut std::string::String) -> usize {
    debug s0 => _1;                      // in scope 0 at src/lib.rs:24:25: 24:31
    debug s1 => _2;                      // in scope 0 at src/lib.rs:24:39: 24:41
    debug s3 => _3;                      // in scope 0 at src/lib.rs:24:50: 24:52
    let mut _0: usize;                   // return place in scope 0 at src/lib.rs:24:67: 24:72
    scope 1 {
    }
    scope 2 {
    }
    scope 3 {
    }
    scope 4 {
        scope 5 {
        }
    }

    bb0: {
        _0 = const 1_usize;              // scope 5 at src/lib.rs:25:3: 25:4
        drop(_1) -> [return: bb1, unwind: bb2]; // scope 0 at src/lib.rs:26:1: 26:2
    }

    bb1: {
        return;                          // scope 0 at src/lib.rs:26:2: 26:2
    }

    bb2 (cleanup): {
        resume;                          // scope 0 at src/lib.rs:24:1: 26:2
    }
}
fn returnstring() -> std::string::String {
    let mut _0: std::string::String;     // return place in scope 0 at src/lib.rs:27:20: 27:26
    scope 1 {
        scope 2 {
            debug s => _1;               // in scope 2 at src/lib.rs:28:7: 28:8
            scope 7 {
            }
        }
        scope 3 {
            let _1: std::string::String; // in scope 3 at src/lib.rs:28:7: 28:8
            scope 4 {
                scope 5 {
                }
                scope 6 {
                }
            }
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 3 at src/lib.rs:28:7: 28:8
        _1 = <std::string::String as std::convert::From<&'_#2r str>>::from(const "hello") -> [return: bb1, unwind: bb3]; // scope 4 at src/lib.rs:28:9: 28:30
                                         // mir::Constant
                                         // + span: src/lib.rs:28:9: 28:21
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&'_#2r str) -> std::string::String {<std::string::String as std::convert::From<&'_#2r str>>::from}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: src/lib.rs:28:22: 28:29
                                         // + literal: Const { ty: &'_#3r str, val: Value(Slice(..)) }
    }

    bb1: {
        FakeRead(ForLet(None), _1);      // scope 3 at src/lib.rs:28:7: 28:8
        _0 = move _1;                    // scope 7 at src/lib.rs:29:3: 29:4
        drop(_1) -> [return: bb2, unwind: bb3]; // scope 1 at src/lib.rs:30:1: 30:2
    }

    bb2: {
        StorageDead(_1);                 // scope 1 at src/lib.rs:30:1: 30:2
        return;                          // scope 0 at src/lib.rs:30:2: 30:2
    }

    bb3 (cleanup): {
        resume;                          // scope 0 at src/lib.rs:27:1: 30:2
    }
}
fn returnstringtup() -> (std::string::String, std::string::String) {
    let mut _0: (std::string::String, std::string::String); // return place in scope 0 at src/lib.rs:31:23: 31:38
    let mut _3: std::string::String;     // in scope 0 at src/lib.rs:34:4: 34:6
    let mut _4: std::string::String;     // in scope 0 at src/lib.rs:34:7: 34:9
    scope 1 {
        scope 2 {
            debug s1 => _1;              // in scope 2 at src/lib.rs:32:7: 32:9
            scope 7 {
                debug s2 => _2;          // in scope 7 at src/lib.rs:33:7: 33:9
                scope 12 {
                    scope 13 {
                    }
                    scope 14 {
                    }
                }
            }
            scope 8 {
                let _2: std::string::String; // in scope 8 at src/lib.rs:33:7: 33:9
                scope 9 {
                    scope 10 {
                    }
                    scope 11 {
                    }
                }
            }
        }
        scope 3 {
            let _1: std::string::String; // in scope 3 at src/lib.rs:32:7: 32:9
            scope 4 {
                scope 5 {
                }
                scope 6 {
                }
            }
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 3 at src/lib.rs:32:7: 32:9
        _1 = <std::string::String as std::convert::From<&'_#2r str>>::from(const "hello") -> [return: bb1, unwind: bb10]; // scope 4 at src/lib.rs:32:10: 32:31
                                         // mir::Constant
                                         // + span: src/lib.rs:32:10: 32:22
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&'_#2r str) -> std::string::String {<std::string::String as std::convert::From<&'_#2r str>>::from}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: src/lib.rs:32:23: 32:30
                                         // + literal: Const { ty: &'_#3r str, val: Value(Slice(..)) }
    }

    bb1: {
        FakeRead(ForLet(None), _1);      // scope 3 at src/lib.rs:32:7: 32:9
        StorageLive(_2);                 // scope 8 at src/lib.rs:33:7: 33:9
        _2 = <std::string::String as std::convert::From<&'_#4r str>>::from(const "hello") -> [return: bb2, unwind: bb9]; // scope 9 at src/lib.rs:33:10: 33:31
                                         // mir::Constant
                                         // + span: src/lib.rs:33:10: 33:22
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&'_#4r str) -> std::string::String {<std::string::String as std::convert::From<&'_#4r str>>::from}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: src/lib.rs:33:23: 33:30
                                         // + literal: Const { ty: &'_#5r str, val: Value(Slice(..)) }
    }

    bb2: {
        FakeRead(ForLet(None), _2);      // scope 8 at src/lib.rs:33:7: 33:9
        StorageLive(_3);                 // scope 13 at src/lib.rs:34:4: 34:6
        _3 = move _1;                    // scope 13 at src/lib.rs:34:4: 34:6
        StorageLive(_4);                 // scope 14 at src/lib.rs:34:7: 34:9
        _4 = move _2;                    // scope 14 at src/lib.rs:34:7: 34:9
        _0 = (move _3, move _4);         // scope 12 at src/lib.rs:34:3: 34:10
        drop(_4) -> [return: bb3, unwind: bb7]; // scope 12 at src/lib.rs:34:9: 34:10
    }

    bb3: {
        StorageDead(_4);                 // scope 12 at src/lib.rs:34:9: 34:10
        drop(_3) -> [return: bb4, unwind: bb8]; // scope 12 at src/lib.rs:34:9: 34:10
    }

    bb4: {
        StorageDead(_3);                 // scope 12 at src/lib.rs:34:9: 34:10
        drop(_2) -> [return: bb5, unwind: bb9]; // scope 2 at src/lib.rs:35:1: 35:2
    }

    bb5: {
        StorageDead(_2);                 // scope 2 at src/lib.rs:35:1: 35:2
        drop(_1) -> [return: bb6, unwind: bb10]; // scope 1 at src/lib.rs:35:1: 35:2
    }

    bb6: {
        StorageDead(_1);                 // scope 1 at src/lib.rs:35:1: 35:2
        return;                          // scope 0 at src/lib.rs:35:2: 35:2
    }

    bb7 (cleanup): {
        drop(_3) -> [return: bb8, unwind terminate]; // scope 12 at src/lib.rs:34:9: 34:10
    }

    bb8 (cleanup): {
        drop(_2) -> [return: bb9, unwind terminate]; // scope 2 at src/lib.rs:35:1: 35:2
    }

    bb9 (cleanup): {
        drop(_1) -> [return: bb10, unwind terminate]; // scope 1 at src/lib.rs:35:1: 35:2
    }

    bb10 (cleanup): {
        resume;                          // scope 0 at src/lib.rs:31:1: 35:2
    }
}
fn foo(_1: &'_#7r mut std::string::String) -> &'_#6r mut std::string::String {
    debug s1 => _1;                      // in scope 0 at src/lib.rs:36:8: 36:10
    let mut _0: &'_#6r mut std::string::String; // return place in scope 0 at src/lib.rs:36:26: 36:37
    let mut _2: &'_#8r mut std::string::String; // in scope 0 at src/lib.rs:37:3: 37:5
    scope 1 {
    }
    scope 2 {
        scope 3 {
        }
    }

    bb0: {
        StorageLive(_2);                 // scope 2 at src/lib.rs:37:3: 37:5
        _2 = &'_#3r mut (*_1);           // scope 3 at src/lib.rs:37:3: 37:5
        _0 = &'_#4r mut (*_2);           // scope 2 at src/lib.rs:37:3: 37:5
        StorageDead(_2);                 // scope 2 at src/lib.rs:38:1: 38:2
        return;                          // scope 0 at src/lib.rs:38:2: 38:2
    }
}
