/* --- BEGIN Variable Definitions ---
Owner Not s2;
Owner Not s3;
Owner Mut s;
Function println();
MutRef Not sr;
Owner Mut s1;
MutRef Not s1r;
Function foo();
Function String::from();
MutRef Not sr1;
--- END Variable Definitions --- */
"!{Move(String::from()->s)}"
"!{Move(String::from()->s1)}"
"!{MutableBorrow(s->sr)}"
"!{MutableBorrow(s1->s1r)}"
"!{PassByMutableReference(s1r->foo())}"
"!{Move(sr->sr1)}"
"!{PassByStaticReference(sr1->println())}"
"!{Move(String::from()->s2)}"
"!{Move(String::from()->s3)}"
"!{PassByStaticReference(s2->println())}"
"!{PassByStaticReference(s3->println())}"
"GoOutOfScope(s2)"
"GoOutOfScope(s3)"
"GoOutOfScope(s)"
"GoOutOfScope(sr)"
"GoOutOfScope(s1)"
"GoOutOfScope(s1r)"
"GoOutOfScope(sr1)"
varmap:{"s2": Owner(Owner { name: "s2", hash: 1, is_mut: false }), "s3": Owner(Owner { name: "s3", hash: 2, is_mut: false }), "s1": Owner(Owner { name: "s1", hash: 6, is_mut: true }), "sr": MutRef(MutRef { name: "sr", hash: 5, is_mut: false }), "s1r": MutRef(MutRef { name: "s1r", hash: 7, is_mut: false }), "sr1": MutRef(MutRef { name: "sr1", hash: 10, is_mut: false }), "foo()": Function(Function { name: "foo()", hash: 8 }), "println()": Function(Function { name: "println()", hash: 4 }), "String::from()": Function(Function { name: "String::from()", hash: 9 }), "s": Owner(Owner { name: "s", hash: 3, is_mut: true })},contents:Lines { buf: BufReader { reader: File { fd: 9, path: "/Users/zhaozesen/Desktop/School Work/SS23/RustViz/rustviz/print/output", read: true, write: false }, buffer: 0/8192 } },line_num:12
fin_linesLines { buf: BufReader { reader: File { fd: 9, path: "/Users/zhaozesen/Desktop/School Work/SS23/RustViz/rustviz/print/output", read: true, write: false }, buffer: 0/8192 } }
print_event:[(1, "Move(String::from()->s)"), (2, "Move(String::from()->s1)"), (3, "MutableBorrow(s->sr)"), (4, "MutableBorrow(s1->s1r)"), (5, "PassByMutableReference(s1r->foo())"), (6, "Move(sr->sr1)"), (7, "PassByStaticReference(sr1->println())"), (8, "Move(String::from()->s2)"), (9, "Move(String::from()->s3)")]
vd:VisualizationData { timelines: {}, external_events: [], preprocess_external_events: [(1, Move { from: Some(Function(Function { name: "String::from()", hash: 9 })), to: Some(Owner(Owner { name: "s", hash: 3, is_mut: true })) }), (2, Move { from: Some(Function(Function { name: "String::from()", hash: 9 })), to: Some(Owner(Owner { name: "s1", hash: 6, is_mut: true })) }), (3, MutableBorrow { from: Some(Owner(Owner { name: "s", hash: 3, is_mut: true })), to: Some(MutRef(MutRef { name: "sr", hash: 5, is_mut: false })) }), (4, MutableBorrow { from: Some(Owner(Owner { name: "s1", hash: 6, is_mut: true })), to: Some(MutRef(MutRef { name: "s1r", hash: 7, is_mut: false })) }), (5, PassByMutableReference { from: Some(MutRef(MutRef { name: "s1r", hash: 7, is_mut: false })), to: Some(Function(Function { name: "foo()", hash: 8 })) }), (6, Move { from: Some(MutRef(MutRef { name: "sr", hash: 5, is_mut: false })), to: Some(MutRef(MutRef { name: "sr1", hash: 10, is_mut: false })) }), (7, PassByStaticReference { from: Some(MutRef(MutRef { name: "sr1", hash: 10, is_mut: false })), to: Some(Function(Function { name: "println()", hash: 4 })) }), (8, Move { from: Some(Function(Function { name: "String::from()", hash: 9 })), to: Some(Owner(Owner { name: "s2", hash: 1, is_mut: false })) }), (9, Move { from: Some(Function(Function { name: "String::from()", hash: 9 })), to: Some(Owner(Owner { name: "s3", hash: 2, is_mut: false })) })], event_line_map: {3: [MutableBorrow { from: Some(Owner(Owner { name: "s", hash: 3, is_mut: true })), to: Some(MutRef(MutRef { name: "sr", hash: 5, is_mut: false })) }], 4: [MutableBorrow { from: Some(Owner(Owner { name: "s1", hash: 6, is_mut: true })), to: Some(MutRef(MutRef { name: "s1r", hash: 7, is_mut: false })) }], 6: [Move { from: Some(MutRef(MutRef { name: "sr", hash: 5, is_mut: false })), to: Some(MutRef(MutRef { name: "sr1", hash: 10, is_mut: false })) }]} }
successfully wrote to src/vis_code.svg
successfully wrote to src/vis_timeline.svg
/* --- BEGIN Variable Definitions ---
--- END Variable Definitions --- */
varmap:{"s3": Owner(Owner { name: "s3", hash: 2, is_mut: false }), "s2": Owner(Owner { name: "s2", hash: 1, is_mut: false }), "String::from()": Function(Function { name: "String::from()", hash: 9 }), "s1r": MutRef(MutRef { name: "s1r", hash: 7, is_mut: false }), "s": Owner(Owner { name: "s", hash: 3, is_mut: true }), "s1": Owner(Owner { name: "s1", hash: 6, is_mut: true }), "sr1": MutRef(MutRef { name: "sr1", hash: 10, is_mut: false }), "println()": Function(Function { name: "println()", hash: 4 }), "sr": MutRef(MutRef { name: "sr", hash: 5, is_mut: false }), "foo()": Function(Function { name: "foo()", hash: 8 })},contents:Lines { buf: BufReader { reader: File { fd: 9, path: "/Users/zhaozesen/Desktop/School Work/SS23/RustViz/rustviz/print/output", read: true, write: false }, buffer: 3797/8192 } },line_num:12
fin_linesLines { buf: BufReader { reader: File { fd: 9, path: "/Users/zhaozesen/Desktop/School Work/SS23/RustViz/rustviz/print/output", read: true, write: false }, buffer: 3797/8192 } }
print_event:[(1, "Move(String::from()->s)"), (2, "Move(String::from()->s1)"), (3, "MutableBorrow(s->sr)"), (4, "MutableBorrow(s1->s1r)"), (5, "PassByMutableReference(s1r->foo())"), (6, "Move(sr->sr1)"), (7, "PassByStaticReference(sr1->println())"), (8, "Move(String::from()->s2)"), (9, "Move(String::from()->s3)"), (10, "PassByStaticReference(s2->println())"), (11, "PassByStaticReference(s3->println())")]
vd:VisualizationData { timelines: {}, external_events: [], preprocess_external_events: [(1, Move { from: Some(Function(Function { name: "String::from()", hash: 9 })), to: Some(Owner(Owner { name: "s", hash: 3, is_mut: true })) }), (2, Move { from: Some(Function(Function { name: "String::from()", hash: 9 })), to: Some(Owner(Owner { name: "s1", hash: 6, is_mut: true })) }), (3, MutableBorrow { from: Some(Owner(Owner { name: "s", hash: 3, is_mut: true })), to: Some(MutRef(MutRef { name: "sr", hash: 5, is_mut: false })) }), (4, MutableBorrow { from: Some(Owner(Owner { name: "s1", hash: 6, is_mut: true })), to: Some(MutRef(MutRef { name: "s1r", hash: 7, is_mut: false })) }), (5, PassByMutableReference { from: Some(MutRef(MutRef { name: "s1r", hash: 7, is_mut: false })), to: Some(Function(Function { name: "foo()", hash: 8 })) }), (6, Move { from: Some(MutRef(MutRef { name: "sr", hash: 5, is_mut: false })), to: Some(MutRef(MutRef { name: "sr1", hash: 10, is_mut: false })) }), (7, PassByStaticReference { from: Some(MutRef(MutRef { name: "sr1", hash: 10, is_mut: false })), to: Some(Function(Function { name: "println()", hash: 4 })) }), (8, Move { from: Some(Function(Function { name: "String::from()", hash: 9 })), to: Some(Owner(Owner { name: "s2", hash: 1, is_mut: false })) }), (9, Move { from: Some(Function(Function { name: "String::from()", hash: 9 })), to: Some(Owner(Owner { name: "s3", hash: 2, is_mut: false })) }), (10, PassByStaticReference { from: Some(Owner(Owner { name: "s2", hash: 1, is_mut: false })), to: Some(Function(Function { name: "println()", hash: 4 })) }), (11, PassByStaticReference { from: Some(Owner(Owner { name: "s3", hash: 2, is_mut: false })), to: Some(Function(Function { name: "println()", hash: 4 })) })], event_line_map: {3: [MutableBorrow { from: Some(Owner(Owner { name: "s", hash: 3, is_mut: true })), to: Some(MutRef(MutRef { name: "sr", hash: 5, is_mut: false })) }], 4: [MutableBorrow { from: Some(Owner(Owner { name: "s1", hash: 6, is_mut: true })), to: Some(MutRef(MutRef { name: "s1r", hash: 7, is_mut: false })) }], 6: [Move { from: Some(MutRef(MutRef { name: "sr", hash: 5, is_mut: false })), to: Some(MutRef(MutRef { name: "sr1", hash: 10, is_mut: false })) }]} }
successfully wrote to src/vis_code.svg
successfully wrote to src/vis_timeline.svg
/* --- BEGIN Variable Definitions ---
--- END Variable Definitions --- */
varmap:{"s1r": MutRef(MutRef { name: "s1r", hash: 7, is_mut: false }), "s3": Owner(Owner { name: "s3", hash: 2, is_mut: false }), "sr": MutRef(MutRef { name: "sr", hash: 5, is_mut: false }), "s1": Owner(Owner { name: "s1", hash: 6, is_mut: true }), "s2": Owner(Owner { name: "s2", hash: 1, is_mut: false }), "s": Owner(Owner { name: "s", hash: 3, is_mut: true }), "String::from()": Function(Function { name: "String::from()", hash: 9 }), "sr1": MutRef(MutRef { name: "sr1", hash: 10, is_mut: false }), "foo()": Function(Function { name: "foo()", hash: 8 }), "println()": Function(Function { name: "println()", hash: 4 })},contents:Lines { buf: BufReader { reader: File { fd: 9, path: "/Users/zhaozesen/Desktop/School Work/SS23/RustViz/rustviz/print/output", read: true, write: false }, buffer: 7589/8192 } },line_num:12
fin_linesLines { buf: BufReader { reader: File { fd: 9, path: "/Users/zhaozesen/Desktop/School Work/SS23/RustViz/rustviz/print/output", read: true, write: false }, buffer: 7589/8192 } }
print_event:[(1, "Move(String::from()->s)"), (2, "Move(String::from()->s1)"), (3, "MutableBorrow(s->sr)"), (4, "MutableBorrow(s1->s1r)"), (5, "PassByMutableReference(s1r->foo())"), (6, "Move(sr->sr1)"), (7, "PassByStaticReference(sr1->println())"), (8, "Move(String::from()->s2)"), (9, "Move(String::from()->s3)"), (10, "PassByStaticReference(s2->println())"), (11, "PassByStaticReference(s3->println())")]
vd:VisualizationData { timelines: {}, external_events: [], preprocess_external_events: [(1, Move { from: Some(Function(Function { name: "String::from()", hash: 9 })), to: Some(Owner(Owner { name: "s", hash: 3, is_mut: true })) }), (2, Move { from: Some(Function(Function { name: "String::from()", hash: 9 })), to: Some(Owner(Owner { name: "s1", hash: 6, is_mut: true })) }), (3, MutableBorrow { from: Some(Owner(Owner { name: "s", hash: 3, is_mut: true })), to: Some(MutRef(MutRef { name: "sr", hash: 5, is_mut: false })) }), (4, MutableBorrow { from: Some(Owner(Owner { name: "s1", hash: 6, is_mut: true })), to: Some(MutRef(MutRef { name: "s1r", hash: 7, is_mut: false })) }), (5, PassByMutableReference { from: Some(MutRef(MutRef { name: "s1r", hash: 7, is_mut: false })), to: Some(Function(Function { name: "foo()", hash: 8 })) }), (6, Move { from: Some(MutRef(MutRef { name: "sr", hash: 5, is_mut: false })), to: Some(MutRef(MutRef { name: "sr1", hash: 10, is_mut: false })) }), (7, PassByStaticReference { from: Some(MutRef(MutRef { name: "sr1", hash: 10, is_mut: false })), to: Some(Function(Function { name: "println()", hash: 4 })) }), (8, Move { from: Some(Function(Function { name: "String::from()", hash: 9 })), to: Some(Owner(Owner { name: "s2", hash: 1, is_mut: false })) }), (9, Move { from: Some(Function(Function { name: "String::from()", hash: 9 })), to: Some(Owner(Owner { name: "s3", hash: 2, is_mut: false })) }), (10, PassByStaticReference { from: Some(Owner(Owner { name: "s2", hash: 1, is_mut: false })), to: Some(Function(Function { name: "println()", hash: 4 })) }), (11, PassByStaticReference { from: Some(Owner(Owner { name: "s3", hash: 2, is_mut: false })), to: Some(Function(Function { name: "println()", hash: 4 })) })], event_line_map: {3: [MutableBorrow { from: Some(Owner(Owner { name: "s", hash: 3, is_mut: true })), to: Some(MutRef(MutRef { name: "sr", hash: 5, is_mut: false })) }], 4: [MutableBorrow { from: Some(Owner(Owner { name: "s1", hash: 6, is_mut: true })), to: Some(MutRef(MutRef { name: "s1r", hash: 7, is_mut: false })) }], 6: [Move { from: Some(MutRef(MutRef { name: "sr", hash: 5, is_mut: false })), to: Some(MutRef(MutRef { name: "sr1", hash: 10, is_mut: false })) }]} }
successfully wrote to src/vis_code.svg
successfully wrote to src/vis_timeline.svg
On line: 22
Move(s->none)
/* --- BEGIN Variable Definitions ---
Function String::from();
Owner Not s;
--- END Variable Definitions --- */
"!{Move(String::from()->s)}"
"GoOutOfScope(s)"
varmap:{"foo()": Function(Function { name: "foo()", hash: 8 }), "sr1": MutRef(MutRef { name: "sr1", hash: 10, is_mut: false }), "String::from()": Function(Function { name: "String::from()", hash: 9 }), "println()": Function(Function { name: "println()", hash: 4 }), "s": Owner(Owner { name: "s", hash: 3, is_mut: true }), "s1": Owner(Owner { name: "s1", hash: 6, is_mut: true }), "s2": Owner(Owner { name: "s2", hash: 1, is_mut: false }), "s1r": MutRef(MutRef { name: "s1r", hash: 7, is_mut: false }), "sr": MutRef(MutRef { name: "sr", hash: 5, is_mut: false }), "s3": Owner(Owner { name: "s3", hash: 2, is_mut: false })},contents:Lines { buf: BufReader { reader: File { fd: 9, path: "/Users/zhaozesen/Desktop/School Work/SS23/RustViz/rustviz/print/output", read: true, write: false }, buffer: 7955/8192 } },line_num:12
fin_linesLines { buf: BufReader { reader: File { fd: 9, path: "/Users/zhaozesen/Desktop/School Work/SS23/RustViz/rustviz/print/output", read: true, write: false }, buffer: 7955/8192 } }
print_event:[(1, "Move(String::from()->s)"), (2, "Move(String::from()->s1)"), (3, "MutableBorrow(s->sr)"), (4, "MutableBorrow(s1->s1r)"), (5, "PassByMutableReference(s1r->foo())"), (6, "Move(sr->sr1)"), (7, "PassByStaticReference(sr1->println())"), (8, "Move(String::from()->s2)"), (9, "Move(String::from()->s3)"), (10, "PassByStaticReference(s2->println())"), (11, "PassByStaticReference(s3->println())")]
vd:VisualizationData { timelines: {}, external_events: [], preprocess_external_events: [(1, Move { from: Some(Function(Function { name: "String::from()", hash: 9 })), to: Some(Owner(Owner { name: "s", hash: 3, is_mut: true })) }), (2, Move { from: Some(Function(Function { name: "String::from()", hash: 9 })), to: Some(Owner(Owner { name: "s1", hash: 6, is_mut: true })) }), (3, MutableBorrow { from: Some(Owner(Owner { name: "s", hash: 3, is_mut: true })), to: Some(MutRef(MutRef { name: "sr", hash: 5, is_mut: false })) }), (4, MutableBorrow { from: Some(Owner(Owner { name: "s1", hash: 6, is_mut: true })), to: Some(MutRef(MutRef { name: "s1r", hash: 7, is_mut: false })) }), (5, PassByMutableReference { from: Some(MutRef(MutRef { name: "s1r", hash: 7, is_mut: false })), to: Some(Function(Function { name: "foo()", hash: 8 })) }), (6, Move { from: Some(MutRef(MutRef { name: "sr", hash: 5, is_mut: false })), to: Some(MutRef(MutRef { name: "sr1", hash: 10, is_mut: false })) }), (7, PassByStaticReference { from: Some(MutRef(MutRef { name: "sr1", hash: 10, is_mut: false })), to: Some(Function(Function { name: "println()", hash: 4 })) }), (8, Move { from: Some(Function(Function { name: "String::from()", hash: 9 })), to: Some(Owner(Owner { name: "s2", hash: 1, is_mut: false })) }), (9, Move { from: Some(Function(Function { name: "String::from()", hash: 9 })), to: Some(Owner(Owner { name: "s3", hash: 2, is_mut: false })) }), (10, PassByStaticReference { from: Some(Owner(Owner { name: "s2", hash: 1, is_mut: false })), to: Some(Function(Function { name: "println()", hash: 4 })) }), (11, PassByStaticReference { from: Some(Owner(Owner { name: "s3", hash: 2, is_mut: false })), to: Some(Function(Function { name: "println()", hash: 4 })) })], event_line_map: {3: [MutableBorrow { from: Some(Owner(Owner { name: "s", hash: 3, is_mut: true })), to: Some(MutRef(MutRef { name: "sr", hash: 5, is_mut: false })) }], 4: [MutableBorrow { from: Some(Owner(Owner { name: "s1", hash: 6, is_mut: true })), to: Some(MutRef(MutRef { name: "s1r", hash: 7, is_mut: false })) }], 6: [Move { from: Some(MutRef(MutRef { name: "sr", hash: 5, is_mut: false })), to: Some(MutRef(MutRef { name: "sr1", hash: 10, is_mut: false })) }]} }
successfully wrote to src/vis_code.svg
successfully wrote to src/vis_timeline.svg
On line: 27
Move(s4->none)
On line: 27
Move(s5->none)
/* --- BEGIN Variable Definitions ---
Owner Not s4;
Owner Not s5;
Function String::from();
--- END Variable Definitions --- */
"!{Move(String::from()->s4)}"
"!{Move(String::from()->s5)}"
"GoOutOfScope(s4)"
"GoOutOfScope(s5)"
varmap:{"s1r": MutRef(MutRef { name: "s1r", hash: 7, is_mut: false }), "sr": MutRef(MutRef { name: "sr", hash: 5, is_mut: false }), "foo()": Function(Function { name: "foo()", hash: 8 }), "s1": Owner(Owner { name: "s1", hash: 6, is_mut: true }), "s3": Owner(Owner { name: "s3", hash: 2, is_mut: false }), "String::from()": Function(Function { name: "String::from()", hash: 9 }), "s": Owner(Owner { name: "s", hash: 3, is_mut: true }), "sr1": MutRef(MutRef { name: "sr1", hash: 10, is_mut: false }), "println()": Function(Function { name: "println()", hash: 4 }), "s2": Owner(Owner { name: "s2", hash: 1, is_mut: false })},contents:Lines { buf: BufReader { reader: File { fd: 9, path: "/Users/zhaozesen/Desktop/School Work/SS23/RustViz/rustviz/print/output", read: true, write: false }, buffer: 7955/8192 } },line_num:12
fin_linesLines { buf: BufReader { reader: File { fd: 9, path: "/Users/zhaozesen/Desktop/School Work/SS23/RustViz/rustviz/print/output", read: true, write: false }, buffer: 7955/8192 } }
print_event:[(1, "Move(String::from()->s)"), (2, "Move(String::from()->s1)"), (3, "MutableBorrow(s->sr)"), (4, "MutableBorrow(s1->s1r)"), (5, "PassByMutableReference(s1r->foo())"), (6, "Move(sr->sr1)"), (7, "PassByStaticReference(sr1->println())"), (8, "Move(String::from()->s2)"), (9, "Move(String::from()->s3)"), (10, "PassByStaticReference(s2->println())"), (11, "PassByStaticReference(s3->println())"), (47, "Move(String::from()->s)"), (64, "Move(String::from()->s4)"), (65, "Move(String::from()->s5)")]
